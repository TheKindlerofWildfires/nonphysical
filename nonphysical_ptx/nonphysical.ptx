//
// Generated by LLVM NVPTX Back-End
//

.version 7.0
.target sm_80
.address_size 64

	// .globl	_ZN81_$LT$nonphysical_ptx$$shared$$primitive$$F32$u20$as$u20$core$$ops$$arith$$Add$GT$3add17h2afb1ffd1176b207E
.visible .func _ZN4core9panicking18panic_bounds_check17h4e5c286e8d48ca34E
(
	.param .b64 _ZN4core9panicking18panic_bounds_check17h4e5c286e8d48ca34E_param_0,
	.param .b64 _ZN4core9panicking18panic_bounds_check17h4e5c286e8d48ca34E_param_1,
	.param .b64 _ZN4core9panicking18panic_bounds_check17h4e5c286e8d48ca34E_param_2
)
.noreturn{}
.extern .func sin_approx_f32
(
	.param .b64 sin_approx_f32_param_0
)
;
.global .align 1 .b8 alloc_c074ceb0c3ee99d230e2800bcf332a1b[26] = {110, 111, 110, 112, 104, 121, 115, 105, 99, 97, 108, 95, 112, 116, 120, 92, 115, 114, 99, 92, 108, 105, 98, 46, 114, 115};
.global .align 8 .u64 alloc_5ad169c5cc6d6a0e1b315f04e6a07870[3] = {generic(alloc_c074ceb0c3ee99d230e2800bcf332a1b), 26, 51539607584};

.visible .func  (.param .b32 func_retval0) _ZN81_$LT$nonphysical_ptx$$shared$$primitive$$F32$u20$as$u20$core$$ops$$arith$$Add$GT$3add17h2afb1ffd1176b207E(
	.param .b32 _ZN81_$LT$nonphysical_ptx$$shared$$primitive$$F32$u20$as$u20$core$$ops$$arith$$Add$GT$3add17h2afb1ffd1176b207E_param_0,
	.param .b32 _ZN81_$LT$nonphysical_ptx$$shared$$primitive$$F32$u20$as$u20$core$$ops$$arith$$Add$GT$3add17h2afb1ffd1176b207E_param_1
)
{
	.reg .f32 	%f<4>;

	ld.param.f32 	%f1, [_ZN81_$LT$nonphysical_ptx$$shared$$primitive$$F32$u20$as$u20$core$$ops$$arith$$Add$GT$3add17h2afb1ffd1176b207E_param_0];
	ld.param.f32 	%f2, [_ZN81_$LT$nonphysical_ptx$$shared$$primitive$$F32$u20$as$u20$core$$ops$$arith$$Add$GT$3add17h2afb1ffd1176b207E_param_1];
	add.rn.f32 	%f3, %f2, %f1;
	st.param.f32 	[func_retval0+0], %f3;
	ret;

}
	// .globl	sin
.visible .entry sin(
	.param .u64 sin_param_0
)
{
	.local .align 4 .b8 	__local_depot1[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b64 	%rd<10>;

	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [sin_param_0];
	cvta.to.global.u64 	%rd1, %rd3;
	ld.global.nc.u64 	%rd5, [%rd1+8];
	setp.eq.s64 	%p1, %rd5, 0;
	@%p1 bra 	$L__BB1_2;
	add.u64 	%rd4, %SP, 0;
	add.u64 	%rd2, %SPL, 0;
	ld.global.nc.u64 	%rd6, [%rd1];
	ld.f32 	%f1, [%rd6];
	st.local.f32 	[%rd2], %f1;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd4;
	call.uni 
	sin_approx_f32, 
	(
	param0
	);
	} // callseq 0
	ld.local.f32 	%f2, [%rd2];
	st.f32 	[%rd6], %f2;
	ret;
$L__BB1_2:
	mov.u64 	%rd8, alloc_5ad169c5cc6d6a0e1b315f04e6a07870;
	cvta.global.u64 	%rd9, %rd8;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0+0], 0;
	.param .b64 param1;
	st.param.b64 	[param1+0], 0;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd9;
	call.uni 
	_ZN4core9panicking18panic_bounds_check17h4e5c286e8d48ca34E, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 1

}
